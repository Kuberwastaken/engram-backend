{
  "Unit I": "Object  Oriented  Programming  Paradigm,  Basic  Concepts  of  Object  Oriented  Programming,  Benefits  of  Object Oriented Programming, Object Oriented Languages, Applications of Object Oriented Programming, C++ Programming Language, Tokens, Keywords, Identifiers and Constants, Data Types, Type Compatibility, Variables,  Operators  in  C++,  Implicit  Type  Conversions,  Operator  Precedence,  The  Main  Function,  Function Prototyping, Call by Reference, Return by Reference, Inline Functions, Function Overloading, Friend Functions, default parameter value.",
  "Unit II": "Specifying a class, Member Functions, Encapsulation, information hiding, abstract data types, objects & classes, Static  Member  Functions,  Arrays  of  Objects,  Constructors  &  Destructors,  Parameterized  Constructors,  Copy Constructors,  Dynamic  Constructors,  Destructors,  identity  and  behaviour  of  an  object,  C++  garbage  collection, dynamic memory allocation, Explicit Type Conversions, Operator Overloading.",
  "Unit III": "Inheritance,  inheritance  methods,  Class  hierarchy,  derivation –  public,  private  &  protected,  aggregation, Inheritance Constructors, composition vs. classification hierarchies, Containership, Initialization List, Polymorphism, categorization of polymorphic techniques, polymorphism by parameter, parametric polymorphism,  generic  function  –  template  function,  function  overriding,  run  time  polymorphism,  virtual functions.",
  "Unit IV": "Standard  C++  classes,  using  multiple  inheritance,  persistant  objects,  streams  and  files,  namespaces,  exception handling,  generic  classes,  standard  template  library:  Library  organization  and  containers,  standard  containers, algorithm and Function objects, iterators and allocators, strings, streams, manipulators, user defined manipulators, vectors."
}