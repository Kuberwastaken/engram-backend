name: Cleanup Target Files (1.91-1.98kb, 2.37kb)

on:
  workflow_dispatch:
    inputs:
      target_directory:
        description: 'Directory to scan (default: ./)'
        required: false
        default: './'
        type: string
  schedule:
    - cron: '0 3 * * 0'  # Sundays at 3 AM UTC

jobs:
  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      TARGET_DIR: ${{ github.event.inputs.target_directory || './' }}
      SIZE_RANGE_1_MIN: 1955
      SIZE_RANGE_1_MAX: 2028
      SPECIFIC_SIZE_2: 2427

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 1

    - name: Scan for target files
      id: scan_files
      run: |
        echo "Scanning for files in size range $SIZE_RANGE_1_MIN - $SIZE_RANGE_1_MAX and exactly $SPECIFIC_SIZE_2 bytes..."

        if [ ! -d "$TARGET_DIR" ]; then
          echo "Target directory '$TARGET_DIR' does not exist."
          echo "files_found=0" >> $GITHUB_OUTPUT
          echo "total_size_bytes=0" >> $GITHUB_OUTPUT
          exit 0
        fi

        FILES_IN_RANGE_1=$(find "$TARGET_DIR" -type f \( -size +${SIZE_RANGE_1_MIN}c -a -size -${SIZE_RANGE_1_MAX}c \) \
          -not -path "./.git/*" -not -path "./node_modules/*" -not -path "./.github/workflows/*" 2>/dev/null || true)

        FILES_OF_SPECIFIC_SIZE_2=$(find "$TARGET_DIR" -type f -size ${SPECIFIC_SIZE_2}c \
          -not -path "./.git/*" -not -path "./node_modules/*" -not -path "./.github/workflows/*" 2>/dev/null || true)

        ALL_TARGET_FILES=$(echo -e "$FILES_IN_RANGE_1\n$FILES_OF_SPECIFIC_SIZE_2" | awk '!seen[$0]++' | grep .)

        if [ -z "$ALL_TARGET_FILES" ]; then
          echo "No target files found."
          echo "files_found=0" >> $GITHUB_OUTPUT
          echo "total_size_bytes=0" >> $GITHUB_OUTPUT
        else
          echo "$ALL_TARGET_FILES" > /tmp/target_files_list.txt

          FILE_COUNT=$(echo "$ALL_TARGET_FILES" | wc -l)
          TOTAL_SIZE_BYTES=0
          while IFS= read -r file; do
            [ -f "$file" ] && FILE_SIZE_BYTES=$(stat -c%s "$file") && TOTAL_SIZE_BYTES=$((TOTAL_SIZE_BYTES + FILE_SIZE_BYTES))
          done <<< "$ALL_TARGET_FILES"

          echo "files_found=$FILE_COUNT" >> $GITHUB_OUTPUT
          echo "total_size_bytes=$TOTAL_SIZE_BYTES" >> $GITHUB_OUTPUT
        fi

    - name: Delete target files
      id: delete_files
      if: steps.scan_files.outputs.files_found != '0'
      run: |
        FILES_TO_DELETE=$(cat /tmp/target_files_list.txt)
        DELETED_COUNT=0
        FAILED_COUNT=0

        echo "$FILES_TO_DELETE" | while read -r file; do
          if [ -f "$file" ]; then
            if rm "$file" 2>/dev/null; then
              echo "Deleted: $file"
              DELETED_COUNT=$((DELETED_COUNT + 1))
            else
              echo "Failed to delete: $file"
              FAILED_COUNT=$((FAILED_COUNT + 1))
            fi
          fi
        done

        echo "files_deleted=$DELETED_COUNT" >> $GITHUB_OUTPUT

    - name: Check for changes
      id: check_changes
      if: steps.scan_files.outputs.files_found != '0'
      run: |
        git status --porcelain
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> $GITHUB_OUTPUT
        else
          echo "changes=false" >> $GITHUB_OUTPUT
        fi

    - name: Configure Git
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"

    - name: Commit deletions
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        DELETED_COUNT=${{ steps.delete_files.outputs.files_deleted || '0' }}
        FREED_SIZE_BYTES=${{ steps.scan_files.outputs.total_size_bytes || '0' }}
        FREED_SIZE_MB=$(awk -v bytes="$FREED_SIZE_BYTES" 'BEGIN {printf "%.2f", bytes / 1024 / 1024}')
        TIMESTAMP=$(date -u +'%Y-%m-%d %H:%M:%S UTC')

        git add -A
        git commit -m "ðŸ§¹ Auto-cleanup: Deleted $DELETED_COUNT files (freed ${FREED_SIZE_MB}MB) - $TIMESTAMP - Run #${{ github.run_number }}"

    - name: Push changes
      if: steps.check_changes.outputs.changes == 'true'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}

    - name: Upload scan results
      if: steps.scan_files.outputs.files_found != '0'
      uses: actions/upload-artifact@v4
      with:
        name: target-files-scan-${{ github.run_number }}
        path: /tmp/target_files_list.txt
        retention-days: 7
